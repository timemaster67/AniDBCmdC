gui = AniDBCmdC: Désolé, aucune interface graphique disponible pour l'instant
help = Taper 'anidbcmdc.jar --help' pour plus d'information.
Usage_1 = Utilisation : anidbcmdc.jar [OPTION]... login=NOM D'UTILISATEUR pass=MOT DE PASSE RÉPERTOIRE
Usage_2 = ou :  anidbcmdc.jar [OPTION]... login=NOM D'UTILISATEUR pass=MOT DE PASSE --files=LISTE DE RÉPERTOIRE
Usage_3 = ou :  anidbcmdc.jar [OPTION]... login=NOM D'UTILISATEUR pass=MOT DE PASSE --recursive-files=LISTE DE RÉPERTOIRE
Usage_4 = Calcul le hachage des fichiers, les ajoutes à AniDB - MyList et les renommes.
Usage_5 = Les paramètres obligatoires des options longue le sont aussi pour les options courtes
Usage_6 =   -a, --anidb-mylist-flags=FLAG_LIST     Décris comment un fichier devrais être ajouter à l'aide de flags 
Usage_7 =                                            syntaxe : 'ajouter,état,vu,stockage,autres'
Usage_8 =                                            ajouter : 0 ne pas ajouter à mylist, 1 ajout de nouveau fichier seulement, 2 toujours ajouter
Usage_9 =   										 état : 0 - inconnus, 1 - disque dur, 2 - cd, 3 - supprimé 4 - partagé, 5 - publié  
Usage_10 =  										 vu : 0 or 1, stockage, autres : chaîne de caractère
Usage_11 =  										 défaut : '1,1,0,,''
Usage_12 = --enable-animetree                      vas créer une structure de sous-répertoire dans le répertoire --move-finished.  Ex : Si le répertoire --move-finished est 'anime', les épisodes de Clannad vont êtres déplacé dans 'anime/Clannad/Clannad - 01.mkv'
Usage_13 = -f, --files=DIRECTORY_LIST              ajoute les fichiers du répertoire spécifié								
Usage_14 = -g, --gui                               démarrer l'interface graphique (pas encore disponible)
Usage_15 = -h, --help                              afficher ce texte d'aide
Usage_16 = -i, --ip-address=IP-ADDRESS:PORT        spécifier l'adresse ip et le port AniDB   défaut : 'api.anidb.info:9000'
Usage_17 = -l, --login=LOGINNAME                   spécifier le nom d'utilisateur AniDB
Usage_18 = -m, --move-finished=DIRECTORY           déplacer les fichiers terminé dans le répertoire spécifié
Usage_19 = -p, --password=PASSWORD                 spécifier le mot de passe AniDB
Usage_20 = -c  --clientport=PORT                   le port local que anidbcmdc utilisera   défaut : '44444'
Usage_21 = -r, --recursive-files=DIRECTORY_LIST    hash les fichiers récursivement dans les répertoires spécifié (inclus les sous-répertoire)
Usage_22 = -R                                      hash les fichiers récursivement dans RÉPERTOIRE(s) (inclus les sous-répertoire) 
Usage_23 = -n, --name-replace=REPLACE_LIST         remplacer la chaîne de caractère SOURCE par DEST dans le nom du fichier   syntaxe : 'SOURCE->DEST,SOURCE->DEST,....'
Usage_24 = -k  --rename                            renames files
Usage_25 = -s, --style=STYLE                       renommer les fichiers en utilisant STYLE
Usage_26 =                                           données disponibles : %animenamepart1,%animenamepart2,%epnamepart1,%epnamepart2,%epnr,%group,%dublang,%crc,%CRC,%resolution,%quality,%vidcodec,%audcodec,%md5,%censored,%version,%ed2k,%sha1,%sublang,%ripsource
Usage_27 =                                           défaut : '%animenamepart1 %animenamepart2 - %epnr - %epnamepart1 %epnamepart2 [%group]"'
Usage_28 = -x                                      utiliser une expression régulière pour le scan des fichiers"
Usage_29 = 											 exemple : anidbcmdc.jar -R -l=name -p=pass '/path/.*\\.avi|.*\\.ogm|.*\\.mpg' va ajouter tous les fichiers.avi,.ogm,.mpg de tous les sous-répertoire de /path
Usage_30 = 											 plus d'information : http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html
Usage_31 = 	Envoyer les bugs à <exelnet@web.de>.



 