gui = AniDBCmdC: Sorry, but no gui available yet.
help = Try anidbcmdc.jar --help' for more information.
Usage_1 = Usage: anidbcmdc.jar [OPTION]... login=LOGIN pass=PASSWORD DIRECTOR
Usage_2 =  or:  anidbcmdc.jar [OPTION]... login=LOGIN pass=PASSWORD --files=DIRECTORY_LIST
Usage_3 =  or:  anidbcmdc.jar [OPTION]... login=LOGIN pass=PASSWORD --recursive-files=DIRECTORY_LIST
Usage_4 = Hash files in DIRECTORY(s), add them to AniDB - MyList and rename them.
Usage_5 = Mandatory arguments to long options are mandatory for short options too.
Usage_6 =   -a, --anidb-mylist-flags=FLAG_LIST     describes using which flags a file should be added
Usage_7 =                                            syntax: 'addit,state,viewed,storage,other'
Usage_8 =                                            addit syntax: 0 do not add to mylist, 1 for add new, 2 add all
Usage_9 =   										 state sytax: 0 - unknown, 1 - hdd, 2 - cd, 3 - deleted 4 - shared, 5 - release  
Usage_10 =  										 viewed: 0 or 1, storage, other strings
Usage_11 =  										 default: '1,1,0,,''
Usage_12 = --enable-animetree                      will create a subdir structure in --move-finished dir.  e.g if --move-finished dir 'anime'  all bleach eps will end in 'anime/bleach/bleach...avi'
Usage_13 = -f, --files=DIRECTORY_LIST              processes files in the listed DIRECTORY(s)									
Usage_14 = -g, --gui                               will start the gui-mode (no gui available yet)
Usage_15 = -h, --help                              print this help
Usage_16 = -i, --ip-address=IP-ADDRESS:PORT        specify the IP-ADDRESS and PORT of AniDB   default: 'api.anidb.info:9000'
Usage_17 = -l, --login=LOGINNAME                   specifiy AniDB LOGINNAME
Usage_18 = -m, --move-finished=DIRECTORY           moves finished files to DIRECTORY
Usage_19 = -p, --password=PASSWORD                 specifiy AniDB PASSWORD
Usage_20 = -c  --clientport=PORT                   the localport on which anidbcmdc is working   default: '44444'
Usage_21 = -r, --recursive-files=DIRECTORY_LIST    processes files recursive in the listed DIRECTORY(s) (incl subdirs)
Usage_22 = -R                                      processes files recursive in DIRECTORY(s) (incl subdirs)   
Usage_23 = -n, --name-replace=REPLACE_LIST         replaces SOURCE string with DEST string of the anime filename   syntax: 'SOURCE->DEST,SOURCE->DEST,...'
Usage_24 = -k  --rename                            renames files
Usage_25 = -s, --style=STYLE                       renames files after STYLE
Usage_26 =                                           available templates: %animenamepart1,%animenamepart2,%epnamepart1,%epnamepart2,%epnr,%group,%dublang,%crc,%CRC,%resolution,%quality,%vidcodec,%audcodec,%md5,%censored,%version,%ed2k,%sha1,%sublang,%ripsource
Usage_27 =                                           default: '%animenamepart1 %animenamepart2 - %epnr - %epnamepart1 %epnamepart2 [%group]"'
Usage_28 = -x                                      enables regular expressions in filenames"
Usage_29 = 											 example: anidbcmdc.jar -R -l=name -p=pass '/path/.*\\.avi|.*\\.ogm|.*\\.mpg' will add all .avi,.ogm,.mpg files in all subdirs of /path
Usage_30 = 											 more information: http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html
Usage_31 = 	Report bugs to <exelnet@web.de>.



 